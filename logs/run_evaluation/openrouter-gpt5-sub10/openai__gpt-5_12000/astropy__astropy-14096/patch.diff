--- a/astropy/coordinates/sky_coordinate.py
+++ b/astropy/coordinates/sky_coordinate.py
@@ -1,6 +1,7 @@
 import copy
 import operator
 import re
+import inspect
 import warnings
 
 import erfa
@@ -653,6 +654,20 @@ class SkyCoord(ShapedLikeNDArray):
         """
         Overrides getattr to return coordinates that this can be transformed
         to, based on the alias attr in the primary transform graph.
+
+        Notes
+        -----
+        If a subclass defines a descriptor (e.g., a ``@property``) and that
+        descriptor's getter raises an AttributeError, Python will fall back
+        to calling ``__getattr__`` with the original attribute name. In that
+        case, try to invoke the descriptor directly so that the original
+        AttributeError (and its message) are propagated instead of masking it
+        with a generic "no attribute '<attr>'" message.
         """
+        try:
+            desc = inspect.getattr_static(self.__class__, attr)
+        except AttributeError:
+            desc = None
+        else:
+            if hasattr(desc, "__get__"):
+                return desc.__get__(self, self.__class__)
         if "_sky_coord_frame" in self.__dict__:
             if self._is_name(attr):
                 return self  # Should this be a deepcopy of self?
@@ -677,7 +692,7 @@ class SkyCoord(ShapedLikeNDArray):
                 return self.transform_to(attr)
 
         # Fail
-        raise AttributeError(
+        raise AttributeError(
             f"'{self.__class__.__name__}' object has no attribute '{attr}'"
         )